@use '../../lib/styles/scss/mixins' as *;
@use 'sass:string';
@use "sass:map";
/*
   style.scss
   For .fs-modal with fade transitions, .fs-modal-backdrop,
   plus body lock in .fs-modal-open
*/

/* Prevent body scroll when a modal is open */
.fs-modal-open {
	overflow: hidden;
}

.fs-modal {
	position: fixed;
	inset: 0;
	display: none;
	z-index: 1050;
	align-items: center;
	justify-content: center;
	background-color: rgba(0, 0, 0, 0.5);

	&.fade {
		opacity: 0;
		transition: opacity 0.3s ease;

		&.show {
			display: flex;
			opacity: 1;
		}
	}

	.fs-modal-dialog {
		width: 100%;
		max-width: 600px;
		background-color: #fff;
		border-radius: 4px;

		.fs-modal-header,
		.fs-modal-body,
		.fs-modal-footer {
			padding: 1rem;
		}

		.fs-modal-header {
			border-bottom: 1px solid #dee2e6;
			display: flex;
			align-items: center;
			justify-content: space-between;
		}

		.fs-modal-footer {
			border-top: 1px solid #dee2e6;
			display: flex;
			align-items: center;
			justify-content: flex-end;
		}
	}

	button {
		&:focus {
			@include focus-visible;
		}

		&.fs-modal-close {
			border-radius: 6px;
			padding: 15px;
			background: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23000'%3e%3cpath d='M.293.293a1 1 0 0 1 1.414 0L8 6.586 14.293.293a1 1 0 1 1 1.414 1.414L9.414 8l6.293 6.293a1 1 0 0 1-1.414 1.414L8 9.414l-6.293 6.293a1 1 0 0 1-1.414-1.414L6.586 8 .293 1.707a1 1 0 0 1 0-1.414z'/%3e%3c/svg%3e");
			background-size: 15px;
			background-repeat: no-repeat;
			background-position: center;
		}
	}
}

.fs-modal-backdrop {
	position: fixed;
	inset: 0;
	z-index: 1040; // behind .fs-modal
	display: none;
	background: rgba(0, 0, 0, 0.5);

	&.show {
		display: block;
	}
}

// Default center placement
.fs-modal.show:not([data-fs-placement]) {
	align-items: center;
	justify-content: center;
}

// Placement variations
$placements: (
	'top-center': (
		align-items: flex-start,
		justify-content: center,
		padding-top: true
	),
	'bottom-center': (
		align-items: flex-end,
		justify-content: center,
		padding-bottom: true
	),
	'top-left': (
		align-items: flex-start,
		justify-content: flex-start,
		padding-top: true,
		padding-left: true
	),
	'top-right': (
		align-items: flex-start,
		justify-content: flex-end,
		padding-top: true,
		padding-right: true
	),
	'bottom-right': (
		align-items: flex-end,
		justify-content: flex-end,
		padding-bottom: true,
		padding-right: true
	),
	'bottom-left': (
		align-items: flex-end,
		justify-content: flex-start,
		padding-bottom: true,
		padding-left: true
	)
);

@each $name, $props in $placements {
	.fs-modal[data-fs-placement="#{$name}"] {
		align-items: map.get($props, align-items);
		justify-content: map.get($props, justify-content);

		@if map.get($props, padding-top) {
			padding-top: 2rem;
		}
		@if map.get($props, padding-bottom) {
			padding-bottom: 2rem;
		}
		@if map.get($props, padding-left) {
			padding-left: 2rem;
		}
		@if map.get($props, padding-right) {
			padding-right: 2rem;
		}
	}
}
